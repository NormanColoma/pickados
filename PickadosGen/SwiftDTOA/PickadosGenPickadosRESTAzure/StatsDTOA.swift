//
// StatsDTOA.swift
// 
// Code autogenerated. Do not modify this file.
//

import Foundation
import SwiftyJSON
		
class StatsDTOA : DTOA
{
	// MARK: - Properties

	var id: Int?;
	
	var benefit: Double?;
	var stakeAverage: Double?;
	var yield: Float?;
	var oddAverage: Double?;
	var totalPicks: Int?;
	var oddAccumulator: Double?;
	var totalStaked: Double?;
	
	
	
	
	
	// MARK: - Constructor
	
	init ()
	{
		// Empty constructor
	}
	
	
	
	// MARK: - JSON <-> DTOA
	
	required init (fromJSONObject json: JSON)
	{
		self.id = json["Id"].object as? Int
		
	
		self.benefit = json["Benefit"].object as? Double;
		self.stakeAverage = json["StakeAverage"].object as? Double;
		self.yield = json["Yield"].object as? Float;
		self.oddAverage = json["OddAverage"].object as? Double;
		self.totalPicks = json["TotalPicks"].object as? Int;
		self.oddAccumulator = json["OddAccumulator"].object as? Double;
		self.totalStaked = json["TotalStaked"].object as? Double;
		
		
	}
	
	func toDictionary() -> [String : AnyObject]
	{
		var dictionary: [String : AnyObject] = [:];
		
		dictionary["Id"] = self.id;
		
	

	
		dictionary["Benefit"] = self.benefit;
	
	

	
		dictionary["StakeAverage"] = self.stakeAverage;
	
	

	
		dictionary["Yield"] = self.yield;
	
	

	
		dictionary["OddAverage"] = self.oddAverage;
	
	

	
		dictionary["TotalPicks"] = self.totalPicks;
	
	

	
		dictionary["OddAccumulator"] = self.oddAccumulator;
	
	

	
		dictionary["TotalStaked"] = self.totalStaked;
	
	
		
		
		
		return dictionary;
	}
}

	