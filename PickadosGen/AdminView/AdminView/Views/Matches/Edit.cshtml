@using AdminView.Resources

@model PickadosGenNHibernate.EN.Pickados.MatchEN

<h1>@textos.Match</h1>
<hr />

<div class="col-xs-6 col-md-6 text-center">
    <strong>@textos.Local</strong><br />
    @using (Html.BeginForm("AddLocalTeamToMatch", "Matches", routeValues: new { idLocalTeam = Model.Home.Id, idMatch = Model.Id, idRound = ViewBag.round, idSeason = ViewBag.season, idCompetition = ViewBag.competition, countryName = ViewBag.country, idSport = ViewBag.sport, typeCompetition = ViewBag.typeCompetition }))
    {
        <input type="hidden" id="hfTeamLocal" name="TeamIdLocal" />
        <div class="input-group">
            <input type="text" id="txtTeamLocal" name="TeamNameLocal" value="@Model.Home.Name" class="form-control" />
            <span class="input-group-btn"><button type="submit" class="btn btn-default">Añadir</button></span>
        </div>
    }
</div>

<div class="col-xs-6 col-md-6 text-center">
    <strong>@textos.Visitor</strong><br />
    @using (Html.BeginForm("AddAwayTeamToMatch", "Matches", routeValues: new { idAwayTeam = Model.Away.Id, idMatch = Model.Id, idRound = ViewBag.round, idSeason = ViewBag.season, idCompetition = ViewBag.competition, countryName = ViewBag.country, idSport = ViewBag.sport, typeCompetition = ViewBag.typeCompetition }))
    {
        <input type="hidden" id="hfTeamAway" name="TeamIdAway" />
        <div class="input-group">
            <input type="text" id="txtTeamAway" name="TeamNameAway" value="@Model.Away.Name" class="form-control" />
            <span class="input-group-btn"><button type="submit" class="btn btn-default">Añadir</button></span>
        </div>
    }
</div>

@using (Html.BeginForm("Edit", "Matches", routeValues: new { idRound = ViewBag.round, idSeason = ViewBag.season, idCompetition = ViewBag.competition, countryName = ViewBag.country, idSport = ViewBag.sport, typeCompetition = ViewBag.typeCompetition }))
{
    //@Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stadium, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stadium, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stadium, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@textos.Save class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink(@textos.Back, "Matches", "Matches", new { idRound = ViewBag.round, idSeason=ViewBag.season, idCompetition = ViewBag.competition, countryName = ViewBag.country, idSport = ViewBag.sport, typeCompetition = ViewBag.typeCompetition }, null)
</div>

<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
      rel="Stylesheet" type="text/css" />
<script type="text/javascript">
        $(function () {
            $("#txtTeamLocal").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Teams/AutoComplete/',
                        data: "{ 'prefix': '" + request.term + "', 'typeCompetition': '@ViewBag.typeCompetition'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfTeamLocal").val(i.item.val);
                },
                minLength: 1
            });
        });

    $(function () {
        $("#txtTeamAway").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Teams/AutoComplete/',
                    data: "{ 'prefix': '" + request.term + "', 'typeCompetition': '@ViewBag.typeCompetition'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#hfTeamAway").val(i.item.val);
            },
            minLength: 1
        });
    });
</script>

