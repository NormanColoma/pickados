@model AdminView.Models.StatsLoginModel

@using (Html.BeginForm("Login", "Stats", FormMethod.Post))
{
    <div class="form-horizontal col-md-12">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.InitialDate, htmlAttributes: new { @class = "col-md-12" })
            @Html.TextBoxFor(model => model.InitialDate, htmlAttributes : new { @class = "form-control col-md-12" , type = "date" })
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.FinalDate, htmlAttributes: new { @class = "col-md-12" })
            @Html.TextBoxFor(model => model.FinalDate, htmlAttributes: new { @class = "form-control col-md-12", type = "date" })
        </div>
        <div class="form-group col-md-4">
            <input class="btn btn-default col-md-2" type="submit" value="Filtrar" />
        </div>
    </div>
}

<div class="clearfix"></div>

<div id="chartContainer"></div>

<script type="text/javascript">

    $(function () {
        var theme = '@(Model.Theme)';
        var title = '@(Model.Title)';
        var axisx = '@(Model.AxisX)';
        var axisy = '@(Model.AxisY)';
        var type = '@(Model.Type)';

        var chart = new CanvasJS.Chart("chartContainer", {
            theme: theme,
            animationEnabled: true,
            title: {
                text: title
            },
            axisX: {
                title: axisx
            },
            axisY: {
                title: axisy
            },

            data: [
            {
                type: type,
                dataPoints: @Html.Raw(Model.DataPoints),

                //You can add dynamic data from the controller as shown below. Check the controller and uncomment the line which generates dataPoints.
                //dataPoints: @Html.Raw(ViewBag.DataPoints),
            }
            ]
        });

        chart.render();
    });
</script>