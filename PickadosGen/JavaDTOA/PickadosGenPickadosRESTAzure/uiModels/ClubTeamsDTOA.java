
package PickadosGenPickadosRESTAzure.uiModels.DTOA;

import PickadosGenPickadosRESTAzure.uiModels.DTO.*;
import PickadosGenPickadosRESTAzure.uiModels.DTO.utils.*;
import PickadosGenPickadosRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class ClubTeamsDTOA extends DTOA
{
	// region - Members, getters and setters

	
	private String name;
	public String getName () { return name; }
	public void setName (String name) { this.name = name; }
	
	private String country;
	public String getCountry () { return country; }
	public void setCountry (String country) { this.country = country; }
	
	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }
	
	
	/* Rol: ClubTeams o--> Player */
	private ArrayList<PlayerDTOA> getAllClub_playerOfClub_team;
	public ArrayList<PlayerDTOA> getGetAllClub_playerOfClub_team () { return getAllClub_playerOfClub_team; }
	public void setGetAllClub_playerOfClub_team (ArrayList<PlayerDTOA> getAllClub_playerOfClub_team) { this.getAllClub_playerOfClub_team = getAllClub_playerOfClub_team; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public ClubTeamsDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			

			if (!JSONObject.NULL.equals(json.opt("Name")))
			{
			 
				this.name = (String) json.opt("Name");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Country")))
			{
			 
				this.country = (String) json.opt("Country");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
			 
				this.id = (Integer) json.opt("Id");
			 
			}
			

			JSONObject jsonGetAllClub_playerOfClub_team = json.optJSONObject("GetAllClub_playerOfClub_team");
			if (jsonGetAllClub_playerOfClub_team != null)
			{
				PlayerDTOA tmp = new PlayerDTOA();
				tmp.setFromJSON(jsonGetAllClub_playerOfClub_team);
				this.getAllClub_playerOfClub_team = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			
		
		  if (this.name != null)
			json.put("Name", this.name);
		
		
		  if (this.country != null)
			json.put("Country", this.country);
		
		
		  if (this.id != null)
			json.put("Id", this.id.intValue());
		
			

			if (this.getAllClub_playerOfClub_team != null)
			{
				json.put("GetAllClub_playerOfClub_team", this.getAllClub_playerOfClub_team.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		TeamDTO dto = new TeamDTO ();
		
		// Attributes
		
		
	dto.setName (this.getName());

	dto.setCountry (this.getCountry());

	dto.setId (this.getId());

		
		
		// Roles
					// TODO: from DTOA [ GetAllClub_playerOfClub_team ] (dataType : ArrayList<PlayerDTOA>) to DTO [ Club_player ]
		
		
		return dto;
	}

	// endregion
}

	