
package PickadosGenPickadosRESTAzure.uiModels.DTOA;

import PickadosGenPickadosRESTAzure.uiModels.DTO.*;
import PickadosGenPickadosRESTAzure.uiModels.DTO.utils.*;
import PickadosGenPickadosRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class SportDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private String name;
	public String getName () { return name; }
	public void setName (String name) { this.name = name; }
	
	
	/* GetAll: Competition */
	private ArrayList<CompetitionDTOA> getAllCompetition;
	public ArrayList<CompetitionDTOA> getGetAllCompetition () { return getAllCompetition; }
	public void setGetAllCompetition (ArrayList<CompetitionDTOA> getAllCompetition) { this.getAllCompetition = getAllCompetition; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public SportDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Name")))
			{
			 
				this.name = (String) json.opt("Name");
			 
			}
			

			JSONArray arrayGetAllCompetition = json.optJSONArray("GetAllCompetition");
			if (arrayGetAllCompetition != null)
			{
				this.getAllCompetition = new ArrayList<CompetitionDTOA>();
				for (int i = 0; i < arrayGetAllCompetition.length(); ++i)
				{
					JSONObject subJson = (JSONObject) arrayGetAllCompetition.opt(i);
					CompetitionDTOA tmp = new CompetitionDTOA();
					tmp.setFromJSON(subJson);
					this.getAllCompetition.add(tmp);
				}
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.name != null)
			json.put("Name", this.name);
		
			

			if (this.getAllCompetition != null)
			{
				JSONArray jsonArray = new JSONArray();
				for (int i = 0; i < this.getAllCompetition.size(); ++i)
				{
					jsonArray.put(this.getAllCompetition.get(i).toJSON());
				}
				json.put("GetAllCompetition", jsonArray);
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		SportDTO dto = new SportDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setName (this.getName());

		
		
		// Roles
		
		
		return dto;
	}

	// endregion
}

	