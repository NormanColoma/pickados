
package PickadosGenPickadosRESTAzure.uiModels.DTOA;

import PickadosGenPickadosRESTAzure.uiModels.DTO.*;
import PickadosGenPickadosRESTAzure.uiModels.DTO.utils.*;
import PickadosGenPickadosRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class Sport_2DTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private String name;
	public String getName () { return name; }
	public void setName (String name) { this.name = name; }
	
	
	/* Rol: Sport_2 o--> Competition */
	private ArrayList<CompetitionDTOA> getAllCompetitionOfSport;
	public ArrayList<CompetitionDTOA> getGetAllCompetitionOfSport () { return getAllCompetitionOfSport; }
	public void setGetAllCompetitionOfSport (ArrayList<CompetitionDTOA> getAllCompetitionOfSport) { this.getAllCompetitionOfSport = getAllCompetitionOfSport; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public Sport_2DTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Name")))
			{
			 
				this.name = (String) json.opt("Name");
			 
			}
			

			JSONObject jsonGetAllCompetitionOfSport = json.optJSONObject("GetAllCompetitionOfSport");
			if (jsonGetAllCompetitionOfSport != null)
			{
				CompetitionDTOA tmp = new CompetitionDTOA();
				tmp.setFromJSON(jsonGetAllCompetitionOfSport);
				this.getAllCompetitionOfSport = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.name != null)
			json.put("Name", this.name);
		
			

			if (this.getAllCompetitionOfSport != null)
			{
				json.put("GetAllCompetitionOfSport", this.getAllCompetitionOfSport.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		SportDTO dto = new SportDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setName (this.getName());

		
		
		// Roles
					// TODO: from DTOA [ GetAllCompetitionOfSport ] (dataType : ArrayList<CompetitionDTOA>) to DTO [ Competition ]
		
		
		return dto;
	}

	// endregion
}

	